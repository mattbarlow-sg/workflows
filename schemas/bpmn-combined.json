{
  "$schema": "http://json-schema.org/draft-07/schema#",
  "title": "BPMN Process",
  "description": "Root schema for BPMN 2.0 process definitions",
  "type": "object",
  "properties": {
    "$schema": {
      "type": "string",
      "description": "JSON Schema reference"
    },
    "process": {
      "$ref": "#/definitions/process"
    },
    "collaboration": {
      "$ref": "#/definitions/collaboration"
    },
    "definitions": {
      "$ref": "#/definitions/definitions"
    }
  },
  "required": [
    "process"
  ],
  "definitions": {
    "common_id": {
      "type": "string",
      "pattern": "^[a-zA-Z_][a-zA-Z0-9_-]*$",
      "minLength": 1,
      "maxLength": 100,
      "description": "Unique identifier for BPMN elements"
    },
    "common_name": {
      "type": "string",
      "minLength": 1,
      "maxLength": 255,
      "description": "Human-readable name for the element"
    },
    "common_documentation": {
      "type": "object",
      "properties": {
        "text": {
          "type": "string",
          "description": "Documentation text"
        },
        "format": {
          "type": "string",
          "enum": [
            "text/plain",
            "text/markdown",
            "text/html"
          ],
          "default": "text/plain"
        }
      },
      "required": [
        "text"
      ]
    },
    "common_extensionElements": {
      "type": "object",
      "description": "Container for custom extensions",
      "additionalProperties": true
    },
    "common_expression": {
      "type": "object",
      "properties": {
        "language": {
          "type": "string",
          "description": "Expression language (e.g., 'javascript', 'python', 'jexl')"
        },
        "body": {
          "type": "string",
          "description": "Expression body"
        }
      },
      "required": [
        "body"
      ]
    },
    "common_agentType": {
      "type": "string",
      "enum": [
        "ai",
        "human",
        "system",
        "dynamic"
      ],
      "description": "Type of agent that can perform a task"
    },
    "common_assignmentStrategy": {
      "type": "string",
      "enum": [
        "static",
        "dynamic",
        "rule-based",
        "capability-based",
        "load-balanced"
      ],
      "description": "Strategy for assigning agents to tasks"
    },
    "common_reviewStrategy": {
      "type": "string",
      "enum": [
        "automatic",
        "manual",
        "conditional",
        "none"
      ],
      "description": "Strategy for reviewing task completion"
    },
    "common_agentCapability": {
      "type": "string",
      "enum": [
        "text-analysis",
        "code-generation",
        "code-review",
        "decision-making",
        "data-processing",
        "document-creation",
        "validation",
        "approval",
        "domain-expertise"
      ],
      "description": "Capabilities that agents may possess"
    },
    "common_constraint": {
      "type": "string",
      "description": "Constraint or requirement for task execution"
    },
    "common_dataType": {
      "type": "string",
      "enum": [
        "string",
        "number",
        "boolean",
        "object",
        "array",
        "date",
        "file"
      ],
      "description": "Data type for variables and data objects"
    },
    "common_messageRef": {
      "type": "string",
      "pattern": "^[a-zA-Z_][a-zA-Z0-9_-]*$",
      "description": "Reference to a message definition"
    },
    "common_errorRef": {
      "type": "string",
      "pattern": "^[a-zA-Z_][a-zA-Z0-9_-]*$",
      "description": "Reference to an error definition"
    },
    "common_position": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number",
          "description": "X coordinate"
        },
        "y": {
          "type": "number",
          "description": "Y coordinate"
        }
      },
      "required": [
        "x",
        "y"
      ],
      "description": "Position coordinates for visual representation"
    },
    "common_bounds": {
      "type": "object",
      "properties": {
        "x": {
          "type": "number"
        },
        "y": {
          "type": "number"
        },
        "width": {
          "type": "number",
          "minimum": 0
        },
        "height": {
          "type": "number",
          "minimum": 0
        }
      },
      "required": [
        "x",
        "y",
        "width",
        "height"
      ],
      "description": "Bounding box for visual elements"
    },
    "flow-objects_event": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "type": {
          "type": "string",
          "enum": [
            "startEvent",
            "endEvent",
            "intermediateEvent",
            "boundaryEvent"
          ]
        },
        "eventDefinition": {
          "type": "object",
          "oneOf": [
            {
              "$ref": "#/definitions/messageEventDefinition"
            },
            {
              "$ref": "#/definitions/timerEventDefinition"
            },
            {
              "$ref": "#/definitions/errorEventDefinition"
            },
            {
              "$ref": "#/definitions/signalEventDefinition"
            },
            {
              "$ref": "#/definitions/conditionalEventDefinition"
            },
            {
              "$ref": "#/definitions/terminateEventDefinition"
            }
          ]
        },
        "attachedToRef": {
          "type": "string",
          "description": "Reference to activity for boundary events"
        },
        "cancelActivity": {
          "type": "boolean",
          "default": true,
          "description": "For boundary events, whether to cancel the activity"
        },
        "position": {
          "$ref": "#/definitions/common_position"
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        }
      },
      "required": [
        "id",
        "type"
      ],
      "if": {
        "properties": {
          "type": {
            "const": "boundaryEvent"
          }
        }
      },
      "then": {
        "required": [
          "attachedToRef"
        ]
      }
    },
    "flow-objects_activity": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "type": {
          "type": "string",
          "enum": [
            "task",
            "userTask",
            "serviceTask",
            "scriptTask",
            "businessRuleTask",
            "sendTask",
            "receiveTask",
            "manualTask",
            "subProcess",
            "callActivity"
          ]
        },
        "agent": {
          "$ref": "#/definitions/agentAssignment"
        },
        "review": {
          "$ref": "#/definitions/reviewConfig"
        },
        "implementation": {
          "type": "string",
          "description": "Implementation details for service/script tasks"
        },
        "script": {
          "$ref": "#/definitions/common_expression",
          "description": "Script definition for script tasks"
        },
        "calledElement": {
          "type": "string",
          "description": "Reference to called process for call activities"
        },
        "isForCompensation": {
          "type": "boolean",
          "default": false
        },
        "loopCharacteristics": {
          "$ref": "#/definitions/loopCharacteristics"
        },
        "position": {
          "$ref": "#/definitions/common_position"
        },
        "bounds": {
          "$ref": "#/definitions/common_bounds"
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        },
        "ioSpecification": {
          "$ref": "#/definitions/ioSpecification"
        }
      },
      "required": [
        "id",
        "name",
        "type"
      ],
      "allOf": [
        {
          "if": {
            "properties": {
              "type": {
                "const": "scriptTask"
              }
            }
          },
          "then": {
            "required": [
              "script"
            ]
          }
        },
        {
          "if": {
            "properties": {
              "type": {
                "const": "callActivity"
              }
            }
          },
          "then": {
            "required": [
              "calledElement"
            ]
          }
        }
      ]
    },
    "flow-objects_gateway": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "type": {
          "type": "string",
          "enum": [
            "exclusiveGateway",
            "parallelGateway",
            "inclusiveGateway",
            "eventBasedGateway",
            "complexGateway"
          ]
        },
        "gatewayDirection": {
          "type": "string",
          "enum": [
            "converging",
            "diverging",
            "mixed"
          ],
          "default": "mixed"
        },
        "default": {
          "type": "string",
          "description": "Default sequence flow id for exclusive/inclusive gateways"
        },
        "position": {
          "$ref": "#/definitions/common_position"
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        }
      },
      "required": [
        "id",
        "type"
      ]
    },
    "flow-objects_agentAssignment": {
      "type": "object",
      "properties": {
        "type": {
          "$ref": "#/definitions/common_agentType"
        },
        "strategy": {
          "$ref": "#/definitions/common_assignmentStrategy"
        },
        "preferredAgent": {
          "$ref": "#/definitions/common_agentType"
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/common_agentCapability"
          },
          "description": "Required capabilities for the agent"
        },
        "constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/common_constraint"
          }
        },
        "assignmentRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/assignmentRule"
          }
        }
      },
      "required": [
        "type",
        "strategy"
      ]
    },
    "flow-objects_reviewConfig": {
      "type": "object",
      "properties": {
        "required": {
          "type": "boolean",
          "default": false
        },
        "reviewer": {
          "$ref": "#/definitions/common_agentType"
        },
        "strategy": {
          "$ref": "#/definitions/common_reviewStrategy"
        },
        "conditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/reviewCondition"
          }
        },
        "actions": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "approve",
              "reject",
              "revise",
              "escalate"
            ]
          },
          "default": [
            "approve",
            "reject",
            "revise"
          ]
        }
      },
      "required": [
        "required"
      ],
      "if": {
        "properties": {
          "required": {
            "const": true
          }
        }
      },
      "then": {
        "required": [
          "reviewer",
          "strategy"
        ]
      }
    },
    "flow-objects_assignmentRule": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/common_expression"
        },
        "assignTo": {
          "$ref": "#/definitions/common_agentType"
        },
        "withReview": {
          "$ref": "#/definitions/common_agentType"
        }
      },
      "required": [
        "condition",
        "assignTo"
      ]
    },
    "flow-objects_reviewCondition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "confidence-threshold",
            "error-detection",
            "complexity-threshold",
            "custom"
          ]
        },
        "threshold": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "expression": {
          "$ref": "#/definitions/common_expression"
        }
      },
      "required": [
        "type"
      ]
    },
    "flow-objects_loopCharacteristics": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/standardLoopCharacteristics"
        },
        {
          "$ref": "#/definitions/multiInstanceLoopCharacteristics"
        }
      ]
    },
    "flow-objects_standardLoopCharacteristics": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "standardLoop"
        },
        "testBefore": {
          "type": "boolean",
          "default": false
        },
        "loopCondition": {
          "$ref": "#/definitions/common_expression"
        },
        "loopMaximum": {
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "type",
        "loopCondition"
      ]
    },
    "flow-objects_multiInstanceLoopCharacteristics": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "multiInstance"
        },
        "isSequential": {
          "type": "boolean",
          "default": false
        },
        "loopCardinality": {
          "$ref": "#/definitions/common_expression"
        },
        "loopDataInputRef": {
          "type": "string"
        },
        "loopDataOutputRef": {
          "type": "string"
        },
        "inputDataItem": {
          "type": "string"
        },
        "outputDataItem": {
          "type": "string"
        },
        "completionCondition": {
          "$ref": "#/definitions/common_expression"
        }
      },
      "required": [
        "type"
      ]
    },
    "flow-objects_ioSpecification": {
      "type": "object",
      "properties": {
        "dataInputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dataInput"
          }
        },
        "dataOutputs": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/dataOutput"
          }
        },
        "inputSets": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "outputSets": {
          "type": "array",
          "items": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    },
    "flow-objects_dataInput": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "itemSubjectRef": {
          "type": "string"
        },
        "isCollection": {
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "flow-objects_dataOutput": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "itemSubjectRef": {
          "type": "string"
        },
        "isCollection": {
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "flow-objects_messageEventDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "message"
        },
        "messageRef": {
          "$ref": "#/definitions/common_messageRef"
        }
      },
      "required": [
        "type",
        "messageRef"
      ]
    },
    "flow-objects_timerEventDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "timer"
        },
        "timeDate": {
          "$ref": "#/definitions/common_expression"
        },
        "timeDuration": {
          "$ref": "#/definitions/common_expression"
        },
        "timeCycle": {
          "$ref": "#/definitions/common_expression"
        }
      },
      "required": [
        "type"
      ],
      "oneOf": [
        {
          "required": [
            "timeDate"
          ]
        },
        {
          "required": [
            "timeDuration"
          ]
        },
        {
          "required": [
            "timeCycle"
          ]
        }
      ]
    },
    "flow-objects_errorEventDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "error"
        },
        "errorRef": {
          "$ref": "#/definitions/common_errorRef"
        }
      },
      "required": [
        "type"
      ]
    },
    "flow-objects_signalEventDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "signal"
        },
        "signalRef": {
          "type": "string"
        }
      },
      "required": [
        "type",
        "signalRef"
      ]
    },
    "flow-objects_conditionalEventDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "conditional"
        },
        "condition": {
          "$ref": "#/definitions/common_expression"
        }
      },
      "required": [
        "type",
        "condition"
      ]
    },
    "flow-objects_terminateEventDefinition": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "const": "terminate"
        }
      },
      "required": [
        "type"
      ]
    },
    "connectors_sequenceFlow": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "sourceRef": {
          "type": "string",
          "description": "Reference to the source element"
        },
        "targetRef": {
          "type": "string",
          "description": "Reference to the target element"
        },
        "conditionExpression": {
          "$ref": "#/definitions/common_expression",
          "description": "Condition for conditional sequence flows"
        },
        "isImmediate": {
          "type": "boolean",
          "default": false,
          "description": "Whether the flow should be taken immediately"
        },
        "waypoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/common_position"
          },
          "minItems": 2,
          "description": "Waypoints for visual representation"
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        }
      },
      "required": [
        "id",
        "sourceRef",
        "targetRef"
      ]
    },
    "connectors_messageFlow": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "sourceRef": {
          "type": "string",
          "description": "Reference to the source element (must be in different pool)"
        },
        "targetRef": {
          "type": "string",
          "description": "Reference to the target element (must be in different pool)"
        },
        "messageRef": {
          "$ref": "#/definitions/common_messageRef"
        },
        "waypoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/common_position"
          },
          "minItems": 2
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        }
      },
      "required": [
        "id",
        "sourceRef",
        "targetRef"
      ]
    },
    "connectors_association": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "associationDirection": {
          "type": "string",
          "enum": [
            "none",
            "one",
            "both"
          ],
          "default": "none"
        },
        "sourceRef": {
          "type": "string",
          "description": "Reference to the source element"
        },
        "targetRef": {
          "type": "string",
          "description": "Reference to the target element"
        },
        "waypoints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/common_position"
          },
          "minItems": 2
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        }
      },
      "required": [
        "id",
        "sourceRef",
        "targetRef"
      ]
    },
    "connectors_dataAssociation": {
      "type": "object",
      "oneOf": [
        {
          "$ref": "#/definitions/dataInputAssociation"
        },
        {
          "$ref": "#/definitions/dataOutputAssociation"
        }
      ]
    },
    "connectors_dataInputAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "type": {
          "type": "string",
          "const": "dataInputAssociation"
        },
        "sourceRef": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "References to source data objects"
        },
        "targetRef": {
          "type": "string",
          "description": "Reference to target data input"
        },
        "transformation": {
          "$ref": "#/definitions/common_expression",
          "description": "Optional transformation expression"
        },
        "assignment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/assignment"
          }
        }
      },
      "required": [
        "id",
        "type",
        "sourceRef",
        "targetRef"
      ]
    },
    "connectors_dataOutputAssociation": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "type": {
          "type": "string",
          "const": "dataOutputAssociation"
        },
        "sourceRef": {
          "type": "array",
          "items": {
            "type": "string"
          },
          "minItems": 1,
          "description": "References to source data outputs"
        },
        "targetRef": {
          "type": "string",
          "description": "Reference to target data object"
        },
        "transformation": {
          "$ref": "#/definitions/common_expression"
        },
        "assignment": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/assignment"
          }
        }
      },
      "required": [
        "id",
        "type",
        "sourceRef",
        "targetRef"
      ]
    },
    "connectors_assignment": {
      "type": "object",
      "properties": {
        "from": {
          "$ref": "#/definitions/common_expression",
          "description": "Source expression"
        },
        "to": {
          "$ref": "#/definitions/common_expression",
          "description": "Target expression"
        }
      },
      "required": [
        "from",
        "to"
      ]
    },
    "artifacts_dataObject": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "itemSubjectRef": {
          "type": "string",
          "description": "Reference to item definition"
        },
        "dataState": {
          "type": "string",
          "description": "Current state of the data object"
        },
        "isCollection": {
          "type": "boolean",
          "default": false,
          "description": "Whether this represents a collection of items"
        },
        "position": {
          "$ref": "#/definitions/common_position"
        },
        "bounds": {
          "$ref": "#/definitions/common_bounds"
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "artifacts_dataStore": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "capacity": {
          "type": "integer",
          "minimum": 0,
          "description": "Storage capacity limit"
        },
        "isUnlimited": {
          "type": "boolean",
          "default": true,
          "description": "Whether the data store has unlimited capacity"
        },
        "itemSubjectRef": {
          "type": "string",
          "description": "Reference to item definition"
        },
        "position": {
          "$ref": "#/definitions/common_position"
        },
        "bounds": {
          "$ref": "#/definitions/common_bounds"
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "artifacts_group": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "categoryValueRef": {
          "type": "string",
          "description": "Reference to category value"
        },
        "position": {
          "$ref": "#/definitions/common_position"
        },
        "bounds": {
          "$ref": "#/definitions/common_bounds"
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        }
      },
      "required": [
        "id"
      ]
    },
    "artifacts_textAnnotation": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "text": {
          "type": "string",
          "minLength": 1,
          "description": "Annotation text content"
        },
        "textFormat": {
          "type": "string",
          "enum": [
            "text/plain",
            "text/markdown",
            "text/html"
          ],
          "default": "text/plain"
        },
        "position": {
          "$ref": "#/definitions/common_position"
        },
        "bounds": {
          "$ref": "#/definitions/common_bounds"
        }
      },
      "required": [
        "id",
        "text"
      ]
    },
    "artifacts_itemDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "structureRef": {
          "type": "string",
          "description": "Reference to data structure"
        },
        "dataType": {
          "$ref": "#/definitions/common_dataType"
        },
        "isCollection": {
          "type": "boolean",
          "default": false
        },
        "itemKind": {
          "type": "string",
          "enum": [
            "information",
            "physical"
          ],
          "default": "information"
        }
      },
      "required": [
        "id",
        "dataType"
      ]
    },
    "artifacts_message": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "itemRef": {
          "type": "string",
          "description": "Reference to item definition"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "artifacts_error": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "errorCode": {
          "type": "string",
          "description": "Error code for identification"
        },
        "structureRef": {
          "type": "string",
          "description": "Reference to error data structure"
        }
      },
      "required": [
        "id",
        "name",
        "errorCode"
      ]
    },
    "artifacts_signal": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "structureRef": {
          "type": "string",
          "description": "Reference to signal data structure"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "artifacts_resource": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "resourceParameters": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/resourceParameter"
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "artifacts_resourceParameter": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "type": {
          "$ref": "#/definitions/common_dataType"
        },
        "isRequired": {
          "type": "boolean",
          "default": false
        }
      },
      "required": [
        "name",
        "type"
      ]
    },
    "artifacts_category": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "categoryValues": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/categoryValue"
          }
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "artifacts_categoryValue": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "value": {
          "type": "string"
        }
      },
      "required": [
        "id",
        "value"
      ]
    },
    "agents_agentDefinition": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "type": {
          "$ref": "#/definitions/common_agentType"
        },
        "description": {
          "type": "string",
          "description": "Description of the agent's role and responsibilities"
        },
        "capabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/common_agentCapability"
          },
          "description": "List of capabilities this agent possesses"
        },
        "constraints": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/common_constraint"
          },
          "description": "Constraints or limitations on the agent"
        },
        "availability": {
          "type": "string",
          "enum": [
            "always",
            "scheduled",
            "on-demand"
          ],
          "default": "always",
          "description": "Agent availability pattern"
        },
        "schedule": {
          "$ref": "#/definitions/schedule",
          "description": "Schedule details if availability is 'scheduled'"
        },
        "maxConcurrentTasks": {
          "type": "integer",
          "minimum": 1,
          "description": "Maximum number of tasks the agent can handle concurrently"
        },
        "priority": {
          "type": "integer",
          "minimum": 1,
          "maximum": 10,
          "default": 5,
          "description": "Agent priority for task assignment (1-10, higher is preferred)"
        },
        "metadata": {
          "type": "object",
          "additionalProperties": true,
          "description": "Additional agent-specific metadata"
        }
      },
      "required": [
        "id",
        "name",
        "type",
        "capabilities"
      ],
      "if": {
        "properties": {
          "availability": {
            "const": "scheduled"
          }
        }
      },
      "then": {
        "required": [
          "schedule"
        ]
      }
    },
    "agents_schedule": {
      "type": "object",
      "properties": {
        "timezone": {
          "type": "string",
          "description": "Timezone for the schedule (e.g., 'UTC', 'America/New_York')"
        },
        "workingHours": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/workingHours"
          }
        },
        "exceptions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/scheduleException"
          }
        }
      },
      "required": [
        "timezone",
        "workingHours"
      ]
    },
    "agents_workingHours": {
      "type": "object",
      "properties": {
        "dayOfWeek": {
          "type": "string",
          "enum": [
            "monday",
            "tuesday",
            "wednesday",
            "thursday",
            "friday",
            "saturday",
            "sunday"
          ]
        },
        "startTime": {
          "type": "string",
          "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
          "description": "Start time in HH:MM format"
        },
        "endTime": {
          "type": "string",
          "pattern": "^([01]?[0-9]|2[0-3]):[0-5][0-9]$",
          "description": "End time in HH:MM format"
        }
      },
      "required": [
        "dayOfWeek",
        "startTime",
        "endTime"
      ]
    },
    "agents_scheduleException": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "description": "Date of the exception"
        },
        "reason": {
          "type": "string",
          "description": "Reason for the exception"
        },
        "available": {
          "type": "boolean",
          "default": false,
          "description": "Whether the agent is available on this date"
        }
      },
      "required": [
        "date",
        "reason"
      ]
    },
    "agents_agentPool": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "description": {
          "type": "string"
        },
        "agents": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "Reference to agent definition ID"
          },
          "minItems": 1
        },
        "assignmentStrategy": {
          "$ref": "#/definitions/common_assignmentStrategy"
        },
        "loadBalancingStrategy": {
          "type": "string",
          "enum": [
            "round-robin",
            "least-loaded",
            "priority-based",
            "random"
          ],
          "default": "round-robin"
        }
      },
      "required": [
        "id",
        "name",
        "agents",
        "assignmentStrategy"
      ]
    },
    "agents_reviewWorkflow": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "description": {
          "type": "string"
        },
        "pattern": {
          "type": "string",
          "enum": [
            "ai-human",
            "human-ai",
            "collaborative",
            "peer-review",
            "hierarchical",
            "custom"
          ],
          "description": "Review workflow pattern"
        },
        "steps": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/reviewStep"
          },
          "minItems": 1
        },
        "escalationRules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/escalationRule"
          }
        },
        "timeouts": {
          "$ref": "#/definitions/reviewTimeouts"
        }
      },
      "required": [
        "id",
        "name",
        "pattern",
        "steps"
      ]
    },
    "agents_reviewStep": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "agent": {
          "$ref": "#/definitions/common_agentType"
        },
        "agentRef": {
          "type": "string",
          "description": "Reference to specific agent definition"
        },
        "action": {
          "type": "string",
          "enum": [
            "execute",
            "review",
            "approve",
            "reject",
            "revise",
            "validate",
            "draft",
            "finalize",
            "flag-issues",
            "pass"
          ],
          "description": "Action to be performed in this step"
        },
        "criteria": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/reviewCriteria"
          },
          "description": "Criteria for this review step"
        },
        "nextStepConditions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/nextStepCondition"
          }
        }
      },
      "required": [
        "id",
        "name",
        "agent",
        "action"
      ]
    },
    "agents_reviewCriteria": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "quality",
            "completeness",
            "accuracy",
            "compliance",
            "performance",
            "custom"
          ]
        },
        "threshold": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "description": "Threshold value for the criteria"
        },
        "description": {
          "type": "string"
        },
        "expression": {
          "$ref": "#/definitions/common_expression"
        }
      },
      "required": [
        "type"
      ]
    },
    "agents_nextStepCondition": {
      "type": "object",
      "properties": {
        "condition": {
          "$ref": "#/definitions/common_expression"
        },
        "nextStepId": {
          "type": "string",
          "description": "ID of the next step to execute"
        },
        "action": {
          "type": "string",
          "enum": [
            "continue",
            "repeat",
            "skip",
            "end"
          ],
          "description": "Action to take if condition is met"
        }
      },
      "required": [
        "condition",
        "action"
      ]
    },
    "agents_escalationRule": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "trigger": {
          "type": "string",
          "enum": [
            "timeout",
            "rejection-count",
            "error",
            "custom"
          ],
          "description": "Trigger for escalation"
        },
        "threshold": {
          "type": "number",
          "description": "Threshold value for trigger"
        },
        "escalateTo": {
          "type": "string",
          "description": "Agent or role to escalate to"
        },
        "notification": {
          "$ref": "#/definitions/notification"
        }
      },
      "required": [
        "id",
        "trigger",
        "escalateTo"
      ]
    },
    "agents_reviewTimeouts": {
      "type": "object",
      "properties": {
        "stepTimeout": {
          "type": "string",
          "pattern": "^P(?!$)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?$",
          "description": "ISO 8601 duration for step timeout"
        },
        "overallTimeout": {
          "type": "string",
          "pattern": "^P(?!$)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?$",
          "description": "ISO 8601 duration for overall review timeout"
        },
        "warningThreshold": {
          "type": "number",
          "minimum": 0,
          "maximum": 1,
          "default": 0.8,
          "description": "Percentage of timeout to trigger warning"
        }
      }
    },
    "agents_notification": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "enum": [
            "email",
            "webhook",
            "message",
            "custom"
          ]
        },
        "recipients": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "template": {
          "type": "string",
          "description": "Notification template ID or content"
        }
      },
      "required": [
        "type",
        "recipients"
      ]
    },
    "agents_performanceMetrics": {
      "type": "object",
      "properties": {
        "agentId": {
          "type": "string"
        },
        "taskCompletionRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "averageTaskDuration": {
          "type": "string",
          "pattern": "^P(?!$)(\\d+Y)?(\\d+M)?(\\d+W)?(\\d+D)?(T(?=\\d)(\\d+H)?(\\d+M)?(\\d+S)?)?$"
        },
        "reviewApprovalRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "errorRate": {
          "type": "number",
          "minimum": 0,
          "maximum": 1
        },
        "lastUpdated": {
          "type": "string",
          "format": "date-time"
        }
      },
      "required": [
        "agentId",
        "lastUpdated"
      ]
    },
    "process": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "processType": {
          "type": "string",
          "enum": [
            "none",
            "public",
            "private"
          ],
          "default": "private"
        },
        "isExecutable": {
          "type": "boolean",
          "default": true
        },
        "isClosed": {
          "type": "boolean",
          "default": false
        },
        "elements": {
          "$ref": "#/definitions/processElements"
        },
        "swimlanes": {
          "$ref": "#/definitions/swimlanes"
        },
        "artifacts": {
          "$ref": "#/definitions/artifacts"
        },
        "agents": {
          "$ref": "#/definitions/agentConfig"
        },
        "documentation": {
          "$ref": "#/definitions/common_documentation"
        },
        "extensionElements": {
          "$ref": "#/definitions/common_extensionElements"
        },
        "auditing": {
          "$ref": "#/definitions/auditing"
        },
        "monitoring": {
          "$ref": "#/definitions/monitoring"
        }
      },
      "required": [
        "id",
        "name",
        "elements"
      ]
    },
    "processElements": {
      "type": "object",
      "properties": {
        "events": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/flow-objects_event"
          }
        },
        "activities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/flow-objects_activity"
          }
        },
        "gateways": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/flow-objects_gateway"
          }
        },
        "sequenceFlows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectors_sequenceFlow"
          }
        },
        "dataAssociations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectors_dataAssociation"
          }
        }
      }
    },
    "swimlanes": {
      "type": "object",
      "properties": {
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/pool"
          }
        },
        "lanes": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/lane"
          }
        }
      }
    },
    "pool": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "processRef": {
          "type": "string",
          "description": "Reference to the process contained in this pool"
        },
        "participantMultiplicity": {
          "$ref": "#/definitions/participantMultiplicity"
        },
        "lanes": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "References to lane IDs"
          }
        },
        "bounds": {
          "$ref": "#/definitions/common_bounds"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "lane": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "partitionElement": {
          "type": "string",
          "description": "Reference to partition element"
        },
        "flowNodeRefs": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "References to flow nodes in this lane"
          }
        },
        "childLaneSet": {
          "type": "array",
          "items": {
            "type": "string",
            "description": "References to child lane IDs"
          }
        },
        "bounds": {
          "$ref": "#/definitions/common_bounds"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "participantMultiplicity": {
      "type": "object",
      "properties": {
        "minimum": {
          "type": "integer",
          "minimum": 0,
          "default": 0
        },
        "maximum": {
          "type": "integer",
          "minimum": 1,
          "default": 1
        }
      }
    },
    "artifacts": {
      "type": "object",
      "properties": {
        "dataObjects": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_dataObject"
          }
        },
        "dataStores": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_dataStore"
          }
        },
        "groups": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_group"
          }
        },
        "textAnnotations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_textAnnotation"
          }
        },
        "associations": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectors_association"
          }
        }
      }
    },
    "agentConfig": {
      "type": "object",
      "properties": {
        "definitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/agents_agentDefinition"
          }
        },
        "pools": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/agents_agentPool"
          }
        },
        "reviewWorkflows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/agents_reviewWorkflow"
          }
        },
        "defaultAssignmentStrategy": {
          "$ref": "#/definitions/common_assignmentStrategy"
        },
        "performanceTracking": {
          "type": "boolean",
          "default": true,
          "description": "Whether to track agent performance metrics"
        }
      }
    },
    "collaboration": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "participants": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/participant"
          }
        },
        "messageFlows": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/connectors_messageFlow"
          }
        },
        "artifacts": {
          "$ref": "#/definitions/artifacts"
        }
      },
      "required": [
        "id",
        "participants"
      ]
    },
    "participant": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "processRef": {
          "type": "string",
          "description": "Reference to the process"
        },
        "participantMultiplicity": {
          "$ref": "#/definitions/participantMultiplicity"
        }
      },
      "required": [
        "id",
        "name"
      ]
    },
    "definitions": {
      "type": "object",
      "properties": {
        "itemDefinitions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_itemDefinition"
          }
        },
        "messages": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_message"
          }
        },
        "errors": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_error"
          }
        },
        "signals": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_signal"
          }
        },
        "resources": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_resource"
          }
        },
        "categories": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/artifacts_category"
          }
        }
      }
    },
    "auditing": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "level": {
          "type": "string",
          "enum": [
            "none",
            "basic",
            "detailed",
            "full"
          ],
          "default": "basic"
        },
        "storage": {
          "type": "string",
          "description": "Where audit logs are stored"
        }
      }
    },
    "monitoring": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "metrics": {
          "type": "array",
          "items": {
            "type": "string",
            "enum": [
              "execution-time",
              "error-rate",
              "throughput",
              "resource-usage",
              "agent-performance"
            ]
          }
        },
        "alerting": {
          "$ref": "#/definitions/alerting"
        }
      }
    },
    "alerting": {
      "type": "object",
      "properties": {
        "enabled": {
          "type": "boolean",
          "default": false
        },
        "rules": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/alertRule"
          }
        }
      }
    },
    "alertRule": {
      "type": "object",
      "properties": {
        "id": {
          "$ref": "#/definitions/common_id"
        },
        "name": {
          "$ref": "#/definitions/common_name"
        },
        "condition": {
          "$ref": "#/definitions/common_expression"
        },
        "severity": {
          "type": "string",
          "enum": [
            "info",
            "warning",
            "error",
            "critical"
          ],
          "default": "warning"
        },
        "notification": {
          "$ref": "#/definitions/agents_notification"
        }
      },
      "required": [
        "id",
        "name",
        "condition",
        "notification"
      ]
    }
  }
}